OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {

    /* This fix the default STACKSIZE of tasks */
    TASK {
        UINT32 STACKSIZE = 300 ;
    } ;

    /* This fix the default STACKSIZE of ISRs */
    ISR {
        UINT32 STACKSIZE = 200 ;
    } ;
};

CPU my_cpu {
  OS config {
    STATUS = EXTENDED;
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "/Users/quentinlebreton/git/trampoline/";
      APP_SRC = "appli_base.c";
      APP_NAME = "appli_base_exe";
      CFLAGS  = "-O0"; 
      LDFLAGS = "-Map=appli_base.map";
      COMPILER = "arm-none-eabi-gcc";
      ASSEMBLER = "arm-none-eabi-as";
      LINKER = "arm-none-eabi-ld";
      COPIER = "arm-none-eabi-objcopy";
      SYSTEM = PYTHON;
    };
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };
  
  APPMODE std {};

  ALARM alarm_1 {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = T_affichage;
    };
    AUTOSTART = TRUE {
      ALARMTIME = 1; 
      CYCLETIME = 1000;
      APPMODE = std;
    };
  };

  ALARM alarm_2 {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = T_period;
    };
    AUTOSTART = TRUE {
      ALARMTIME = 1; 
      CYCLETIME = 100;
      APPMODE = std;
    };
  };

  RESOURCE val {
    RESOURCEPROPERTY = STANDARD;
  };

  TASK T_affichage {
    PRIORITY = 10;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    RESOURCE = val;
  };

  TASK T_fond {
    PRIORITY = 1;
    AUTOSTART = TRUE {
      APPMODE = std;
    };
    ACTIVATION = 1;
    SCHEDULE = FULL;
    RESOURCE = val;
  };

  TASK T_period {
    PRIORITY = 5;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    RESOURCE = val;
  };

};
